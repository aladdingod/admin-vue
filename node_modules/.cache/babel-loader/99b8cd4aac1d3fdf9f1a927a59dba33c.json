{"remainingRequest":"F:\\myblob\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js!F:\\myblob\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!F:\\myblob\\vue-element-admin\\src\\store\\modules\\user.js","dependencies":[{"path":"F:\\myblob\\vue-element-admin\\src\\store\\modules\\user.js","mtime":1574149359968},{"path":"F:\\myblob\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\myblob\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\myblob\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\myblob\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport { login as _login, logout as _logout, getInfo as _getInfo } from '@/api/user';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nimport router, { resetRouter } from '@/router';\nvar state = {\n  token: getToken(),\n  name: '',\n  avatar: '',\n  introduction: '',\n  roles: []\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n    state.introduction = introduction;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      _login({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        var data = response.result.data; // var data = {\n        //   token: 'admin-token'\n        // }\n        // hk 手动设置token\n\n        commit('SET_TOKEN', data.token);\n        setToken(data.token);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new Promise(function (resolve, reject) {\n      _getInfo(state.token).then(function (response) {\n        var data = response.result.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        console.log('store data 执行到这里');\n        var roles = data.roles,\n            name = data.name,\n            avatar = data.avatar,\n            introduction = data.introduction; // roles must be a non-empty array\n\n        if (!roles || roles.length <= 0) {\n          reject('getInfo: roles must be a non-null array!');\n        }\n\n        commit('SET_ROLES', roles);\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', avatar);\n        commit('SET_INTRODUCTION', introduction);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state,\n        dispatch = _ref3.dispatch;\n    return new Promise(function (resolve, reject) {\n      _logout(state.token).then(function () {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        removeToken();\n        resetRouter(); // reset visited views and cached views\n        // to fixed https://github.com/PanJiaChen/vue-element-admin/issues/2485\n\n        dispatch('tagsView/delAllViews', null, {\n          root: true\n        });\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      removeToken();\n      resolve();\n    });\n  },\n  // dynamically modify permissions\n  changeRoles: function changeRoles(_ref5, role) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(resolve) {\n        var token, _ref7, roles, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                setToken(token);\n                _context.next = 5;\n                return dispatch('getInfo');\n\n              case 5:\n                _ref7 = _context.sent;\n                roles = _ref7.roles;\n                resetRouter(); // generate accessible routes map based on roles\n\n                _context.next = 10;\n                return dispatch('permission/generateRoutes', roles, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context.sent;\n                // dynamically add accessible routes\n                router.addRoutes(accessRoutes); // reset visited views and cached views\n\n                dispatch('tagsView/delAllViews', null, {\n                  root: true\n                });\n                resolve();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}