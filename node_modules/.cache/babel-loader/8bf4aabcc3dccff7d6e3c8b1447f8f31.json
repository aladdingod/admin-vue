{"remainingRequest":"F:\\myblob\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js!F:\\myblob\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!F:\\myblob\\vue-element-admin\\src\\permission.js","dependencies":[{"path":"F:\\myblob\\vue-element-admin\\src\\permission.js","mtime":1572337823015},{"path":"F:\\myblob\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\myblob\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\myblob\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"F:\\\\myblob\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread2\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\myblob\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport { getToken } from '@/utils/auth'; // get token from cookie\n\nimport getPageTitle from '@/utils/get-page-title';\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['/login', '/auth-redirect']; // no redirect whitelist\n\nrouter.beforeEach(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken, hasRoles, _ref2, roles, accessRoutes;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // start progress bar\n            NProgress.start();\n            console.log('权限开始'); // set page title\n\n            document.title = getPageTitle(to.meta.title); // determine whether the user has logged in\n\n            hasToken = getToken();\n\n            if (!hasToken) {\n              _context.next = 37;\n              break;\n            }\n\n            if (!(to.path === '/login')) {\n              _context.next = 10;\n              break;\n            }\n\n            // if is logged in, redirect to the home page\n            next({\n              path: '/'\n            });\n            NProgress.done();\n            _context.next = 35;\n            break;\n\n          case 10:\n            // determine whether the user has obtained his permission roles through getInfo\n            hasRoles = store.getters.roles && store.getters.roles.length > 0;\n            console.log('权限验证');\n\n            if (!hasRoles) {\n              _context.next = 16;\n              break;\n            }\n\n            // if (true) {\n            next();\n            _context.next = 35;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.next = 19;\n            return store.dispatch('user/getInfo');\n\n          case 19:\n            _ref2 = _context.sent;\n            roles = _ref2.roles;\n            _context.next = 23;\n            return store.dispatch('permission/generateRoutes', roles);\n\n          case 23:\n            accessRoutes = _context.sent;\n            // dynamically add accessible routes\n            router.addRoutes(accessRoutes); // hack method to ensure that addRoutes is complete\n            // set the replace: true, so the navigation will not leave a history record\n\n            next(_objectSpread({}, to, {\n              replace: true\n            }));\n            _context.next = 35;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](16);\n            _context.next = 32;\n            return store.dispatch('user/resetToken');\n\n          case 32:\n            Message.error(_context.t0 || 'Has Error');\n            next(\"/login?redirect=\".concat(to.path));\n            NProgress.done();\n\n          case 35:\n            _context.next = 38;\n            break;\n\n          case 37:\n            /* has no token*/\n            if (whiteList.indexOf(to.path) !== -1) {\n              // in the free login whitelist, go directly\n              next();\n            } else {\n              // other pages that do not have permission to access are redirected to the login page.\n              next(\"/login?redirect=\".concat(to.path));\n              NProgress.done();\n            }\n\n          case 38:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[16, 28]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.afterEach(function () {\n  // finish progress bar\n  NProgress.done();\n});",null]}