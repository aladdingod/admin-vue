{"remainingRequest":"E:\\vueProject\\vueSingle\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js!E:\\vueProject\\vueSingle\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\vueProject\\vueSingle\\vue-element-admin\\mock\\article.js","dependencies":[{"path":"E:\\vueProject\\vueSingle\\vue-element-admin\\mock\\article.js","mtime":1572245986947},{"path":"E:\\vueProject\\vueSingle\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\vueSingle\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\vueSingle\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport Mock from 'mockjs';\nvar List = [];\nvar count = 100;\nvar baseContent = '<p>I am testing data, I am testing data.</p><p><img src=\"https://wpimg.wallstcn.com/4c69009c-0fd4-4153-b112-6cb53d1cf943\"></p>';\nvar image_uri = 'https://wpimg.wallstcn.com/e4558086-631c-425c-9430-56ffb46e70b3';\n\nfor (var i = 0; i < count; i++) {\n  List.push(Mock.mock({\n    id: '@increment',\n    timestamp: +Mock.Random.date('T'),\n    author: '@first',\n    reviewer: '@first',\n    title: '@title(5, 10)',\n    content_short: 'mock data',\n    content: baseContent,\n    forecast: '@float(0, 100, 2, 2)',\n    importance: '@integer(1, 3)',\n    'type|1': ['CN', 'US', 'JP', 'EU'],\n    'status|1': ['published', 'draft', 'deleted'],\n    display_time: '@datetime',\n    comment_disabled: true,\n    pageviews: '@integer(300, 5000)',\n    image_uri: image_uri,\n    platforms: ['a-platform']\n  }));\n}\n\nexport default [{\n  url: '/article/list',\n  type: 'get',\n  response: function response(config) {\n    var _config$query = config.query,\n        importance = _config$query.importance,\n        type = _config$query.type,\n        title = _config$query.title,\n        _config$query$page = _config$query.page,\n        page = _config$query$page === void 0 ? 1 : _config$query$page,\n        _config$query$limit = _config$query.limit,\n        limit = _config$query$limit === void 0 ? 20 : _config$query$limit,\n        sort = _config$query.sort;\n    var mockList = List.filter(function (item) {\n      if (importance && item.importance !== +importance) return false;\n      if (type && item.type !== type) return false;\n      if (title && item.title.indexOf(title) < 0) return false;\n      return true;\n    });\n\n    if (sort === '-id') {\n      mockList = mockList.reverse();\n    }\n\n    var pageList = mockList.filter(function (item, index) {\n      return index < limit * page && index >= limit * (page - 1);\n    });\n    return {\n      code: 20000,\n      data: {\n        total: mockList.length,\n        items: pageList\n      }\n    };\n  }\n}, {\n  url: '/article/detail',\n  type: 'get',\n  response: function response(config) {\n    var id = config.query.id;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = List[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var article = _step.value;\n\n        if (article.id === +id) {\n          return {\n            code: 20000,\n            data: article\n          };\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n}, {\n  url: '/article/pv',\n  type: 'get',\n  response: function response(_) {\n    return {\n      code: 20000,\n      data: {\n        pvData: [{\n          key: 'PC',\n          pv: 1024\n        }, {\n          key: 'mobile',\n          pv: 1024\n        }, {\n          key: 'ios',\n          pv: 1024\n        }, {\n          key: 'android',\n          pv: 1024\n        }]\n      }\n    };\n  }\n}, {\n  url: '/article/create',\n  type: 'post',\n  response: function response(_) {\n    return {\n      code: 20000,\n      data: 'success'\n    };\n  }\n}, {\n  url: '/article/update',\n  type: 'post',\n  response: function response(_) {\n    return {\n      code: 20000,\n      data: 'success'\n    };\n  }\n}];",null]}